buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.avast.gradle:docker-compose-gradle-plugin:0.3.11'
    }
}

group 'cz.alenkacz.marathon.autoscale'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'scala'
apply plugin: 'docker-compose'

sourceCompatibility = 1.8
mainClassName = "cz.alenkacz.marathon.scaler.Main"

tasks.composeUp.dependsOn { distTar }

repositories {
    mavenCentral()
    jcenter()
}

ext {
    scalaVersion = '2.11'
    scalaLibraryVersion = '2.11.7'
}

dockerCompose {
    useComposeFiles = ['docker-compose-gradle.yml']
}

dependencies {
    compile "org.scala-lang:scala-library:${scalaLibraryVersion}"
    compile "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.5.0"
    compile 'com.mesosphere:marathon-client:0.3.0'
    compile 'com.typesafe:config:1.3.1'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile "com.rabbitmq:http-client:1.0.0.RELEASE"
    compile "org.asynchttpclient:async-http-client:2.0.11"
    compile "com.google.code.gson:gson:2.8.0"

    testCompile "org.scalatest:scalatest_${scalaVersion}:2.2.5"
    testCompile "junit:junit:4.12"
    testCompile 'org.mockito:mockito-core:2.1.0'
    testCompile "com.rabbitmq:amqp-client:3.6.2"
}

dockerCompose.isRequiredBy(test)
test.doFirst {
    dockerCompose.exposeAsEnvironment(test)
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}
